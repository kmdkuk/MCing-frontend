apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcing-backend
  labels:
    app: mcing-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcing-backend
  template:
    metadata:
      labels:
        app: mcing-backend
    spec:
      containers:
        - name: mcing-backend
          image: mcing-backend:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mcing-backend
  labels:
    app: mcing-backend
spec:
  selector:
    app: mcing-backend
  ports:
    - protocol: TCP
      port: 8080 # Serviceが公開するポート
      targetPort: 80 # Pod内のコンテナがリッスンしているポート
  type: ClusterIP # 外部に公開する場合はLoadBalancer、内部のみの場合はClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: default
  name: pod-reader-binding
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRoleの定義
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: minecraft-reader
rules:
  - apiGroups: ["mcing.kmdkuk.com"] # カスタムリソースのAPIグループ
    resources: ["minecrafts"] # リソース名
    verbs: ["get", "list", "watch"] # 許可する操作

---
# ClusterRoleBindingの定義
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: minecraft-reader-binding
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: minecraft-reader
  apiGroup: rbac.authorization.k8s.io
